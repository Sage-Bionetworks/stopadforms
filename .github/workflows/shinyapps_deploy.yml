# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
# deploy on pull request approval and merge

name: shiny-apps-deploy

on:
  push:
    branches:
      - fix-deployment
  pull_request:
    types:
      - closed
  workflow_dispatch:

jobs:
  shinyDeploy:
    # if: github.event.pull_request.merged == true
    runs-on: Ubuntu-20.04
    container: rocker/rstudio:4.1.3
    env:
      # R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      # RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
 
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          # The rsconnect R package needs cUrl.  This app needs the Java JDK (runtime AND compiler).
          sudo apt-get install -y libcurl4-openssl-dev default-jdk openssl libssl-dev libv8-dev libxml2-dev libssh2-1-dev zlib1g-dev libpng-dev
           # sudo apt-get install -y make python3-minimal pandoc pandoc-citeproc git-core libv8-dev libxml2-dev libcurl4-openssl-dev libssl-dev libssh2-1-dev zlib1g-dev

      - uses: actions/checkout@v2
        
      # We don't use renv, so we want to skip the "renv::activate()" command in .Rprofile
      - name: disable renv
        run: rm .Rprofile

      - uses: r-lib/actions/setup-pandoc@v2

      # - name: Install R packages
      #   run: |
      #     Sys.setenv(GITHUB_PAT="${{ secrets.pat_for_shinyapps_action }}")
      #     source("install-pkgs.R")
      #   shell: sudo Rscript {0}

      - name: Install dependencies
        run: |
          # Sys.setenv(GITHUB_PAT="${{ secrets.pat_for_shinyapps_action }}")
          install.packages('remotes')
          cran <- c(
          "remotes",
          "dplyr",
          "config",
          "glue",
          "golem",
          "httr",
          "jsonlite",
          "magrittr",
          "purrr",
          "reactable",
          "readr",
          "reticulate",
          "rlang",
          "shiny",
          "shinyjs",
          "stringr",
          "tibble",
          "tidyr",
          "waiter",
          "htmlwidgets",
          "rsconnect", # TODO remove this line if install_version solves the deployment issue
          "brio",
          "callr",
          "diffobj",
          "praise",
          "processx",
          "ps",
          "rematch2",
          "rmarkdown",
          "testthat",
          "tinytex"
          )
          remotes::install_cran(cran)

          # remotes::install_cran("rcmdcheck")
          # remotes::install_cran("httr")
          # remotes::install_cran("rsconnect")
          # Downgrade rsconnect to a version that is compatible with shinyapps.io
          # https://community.rstudio.com/t/unable-to-deploy-on-shinyapp-io/170160
          # remotes::install_version("rsconnect", "0.8.29")
          install.packages("rsconnect")
          packages_installed_from_github <- c("dreamRs/shinypop", "Sage-Bionetworks/dccvalidator", "Sage-Bionetworks/synapseforms")
          remotes::install_github(packages_installed_from_github)

        shell: Rscript {0}

      # - uses: r-lib/actions/setup-renv@v2

      - name: Deploy app
        run: |
          branch<-Sys.getenv("GITHUB_REF_NAME")
          repo<-Sys.getenv("GITHUB_REPOSITORY")
          appName<-strsplit(repo, "/")[[1]][2]
          if (!startsWith(branch, "prod")) {
             appName = paste(appName, "staging", sep="-")
          }
          rsConnectUser <-"${{ secrets.RSCONNECT_USER }}"
          rsConnectToken <- "${{ secrets.RSCONNECT_TOKEN }}"
          rsConnectSecret <- "${{ secrets.RSCONNECT_SECRET }}" 
          
          # create env file
          config <- "client_name=Stop AD Forms"
          config <- c(config, "client_id=${{ secrets.OAUTH_CLIENT_ID }}")
          config <- c(config, "client_secret=${{ secrets.OAUTH_CLIENT_SECRET }}")
          appUrl<- sprintf("https://%s.shinyapps.io/%s", rsConnectUser, appName)
          config <- c(config, sprintf("app_url=%s", appUrl))
         
          envFileConn<-file(".Renviron")
          tryCatch(
             writeLines(config, envFileConn),
             finally=close(envFileConn)
          )         
          
          # https://github.com/rstudio/rsconnect/issues/124
          options(rsconnect.max.bundle.files=100000)
          options(rsconnect.max.bundle.size=3145728000)
          rsconnect::setAccountInfo(rsConnectUser, rsConnectToken, rsConnectSecret)
          appFiles<-dir(all.files=TRUE, include.dirs=TRUE)
          rsconnect::deployApp(appName = appName, appFiles=appFiles, forceUpdate = TRUE)
        shell: Rscript {0}
